name: Build/Test/Cover Project

on: push

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: "3.17.x"
      - name: checkout repo
        uses: actions/checkout@v2
      - name: create build folder
        run: mkdir -p build
      - name: build
        run: cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: makefile
        run: cd build && make
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  Windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: "3.17.x"
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master
    - name: Create build folder
      run: mkdir build
    - name: Launch cmake
      run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
    - name: Launch build
      run: cmake --build build
  Tests:
    runs-on: ubuntu-latest
    needs: [Linux, Windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: tests
        run: ./build/runTests
      - name: install gcovr
        run: sudo apt-get install -y gcovr
      - name: launch coverage
        run: gcovr -r . --exclude "build/" --exclude "tests/"
  Doxygen:
    runs-on: ubuntu-latest
    needs: [Tests]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: create doc
        uses: mattnotmitt/doxygen-action@v1.9.5
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doxydoc/html
  DiscordNotification:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
  Release:
    runs-on: ubuntu-latest
    needs: [Tests, Linux]
    steps:
      - name: Restore build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.0
        with:
          type: 'zip'
          filename: 'release_linux.zip'
      - name: Upload Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "release_linux.zip"
          token: ${{ secrets.GITHUB_TOKEN }}